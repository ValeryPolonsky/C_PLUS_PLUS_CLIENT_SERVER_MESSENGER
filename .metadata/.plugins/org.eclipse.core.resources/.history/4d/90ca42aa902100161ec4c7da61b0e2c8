#ifndef MAIN_CPP_
#define MAIN_CPP_

#include <iostream>
#include <string.h>
#include "TCPMessengerClient.h"

using namespace std;

void printInstructions();

int main()
{
	printHelpMenu();
	TCPMessengerClient * messenger = new TCPMessengerClient();
	while(true)
	{
		string message = "";
		string username = "";
		string name = "";
		string command = "";
		string chatRoomName = "";
		string ip = "";
		string password = "";
		cin >> command;
		if(command == "c")
		{
			cin>>ip;
			messenger->connect(ip);
		}
		else if(command == "o")
		{
			cin >> username;
			messenger->open(username);
		}
		else if(command == "login")
		{
			cin >> username;
			cin >> password;
			messenger->login(username , password);
		}
		else if(command == "register")
		{
			cin >> username;
			cin >> password;
			messenger->signup(username, password);
		}
		else if(command=="lu")
		{
			messenger->printListOfUsers();
		}
		else if(command=="lcu")
		{
			messenger->printConnectedUsers();
		}
		else if(command=="lr")
		{
			messenger->printRooms();
		}
		else if(command=="lru")
		{
			cin>>chatRoomName;
			messenger->getUserFromRoom(chatRoomName);
		}
		else if(command=="l")
		{
			messenger->getMystatus();
		}
		else if(command=="csr")
		{
			messenger->exitFromRoom();
		}
		else if(command=="lo")
		{
			cin >> username;
			messenger->getStatus(username);
		}
		else if(command == "cnr")
		{
			cin>>chatRoomName;
			messenger->createChatroom(chatRoomName);
		}
		else if(command == "s")
		{
			getline(std::cin ,message);
			if(message.size()>0 && message[0] == ' ')
				message.erase(0,1);
			if (!messenger->isActiveClientSession())
			{
				cout<<"!!!There is no active session!!!"<<endl;
			}
			else
			{
				messenger->send(message);
			}
		}
		else if(command == "cs")
		{
			if (!messenger->isActiveClientSession())
			{
				cout<<"!!!There is no active session!!!"<<endl;
			}
			else
			{
				messenger->closeActiveSessionWithPeer();
			}
		}
		else if(command == "cr")
		{
			cin>>chatRoomName;
			messenger->closeRoom(chatRoomName);
		}
		else if(command == "d")
		{
			messenger->disconnect();
			delete messenger;
			messenger = new TCPMessengerClient();
		}
		else if(command == "or")
		{
			cin>>chatRoomName;
			messenger->openSessionWithChatRoom(chatRoomName);
		}
		else if(command == "p")
		{
			messenger->printMap();
		}
		else if(command == "x")
		{
			break;
		}
		else
		{
			cout << "!!!Unknown command!!!" << endl;
		}
	}
	messenger->disconnect();
	delete messenger;
	cout<<"Messenger has been closed"<<endl;
	return 0;
}

void printInstructions()
{
	cout<<"************************************************************************************"<<endl;
	cout<<"************************************* MAIN MENU ************************************"<<endl;
	cout<<"*** Connect to server with given ip        : c <ip address>                      ***"<<endl;
	cout<<"*** Registrate a new user                  : registrate <user name> <password>   ***"<<endl;
	cout<<"*** Login                                  : login <user name> <password>        ***"<<endl;
	cout<<"*** Create session with partner            : o <partner name>                    ***"<<endl;
	cout<<"*** Display all registered users           : lu                                  ***"<<endl;
	cout<<"*** Display connected users                : lcu                                 ***"<<endl;
	cout<<"*** Create a new chat room                 : cnr                                 ***"<<endl;
	cout<<"*** To display all rooms                   : lr                                  ***"<<endl;
	cout<<"*** Display users in chat room             : lru                                 ***"<<endl;
	cout<<"*** Send message                           : s                                   ***"<<endl;
	cout<<"*** Print the current status of the client : l                                   ***"<<endl;
	cout<<"*** Close room                             : cr <room name>                      ***"<<endl;
	cout<<"*** Connect to the chat room               : or <room name>                      ***"<<endl;
	cout<<"*** Close opened session                   : cs                                  ***"<<endl;
	cout<<"*** Close opendes session with chat room   : csr                                 ***"<<endl;
	cout<<"*** Disconnect from server                 : d                                   ***"<<endl;
	cout<<"*** Exit from application                  : x                                   ***"<<endl;
	cout<<"************************************************************************************"<<endl;
	cout<<"************************************************************************************"<<endl;
}


#endif /* MAIN_CPP_ */

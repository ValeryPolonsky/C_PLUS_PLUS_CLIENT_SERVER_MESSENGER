/*
 * Room.cpp
 *
 *  Created on: Jun 8, 2013
 *      Author: user
 */

#include "Room.h"
#include "User.h"

using namespace std;

// constructor of chat room
Room::Room()
{
	multiThreadLocker = new MultiThreadLocker(1);
}

// parameters constructor
Room::Room(string name , string owner , User  user)
{
	multiThreadLocker = new MultiThreadLocker(1);
	this->name = name;
	this->owner = owner;
	this->users.push_back(user);
}

// get users list
vector<User> Room::getUserList()
{
	return users;
}

// set user in list
void Room::setUser(User User)
{
	multiThreadLocker->lock();
	this->users.push_back(User);
	multiThreadLocker->unlock();
}

// erase user from chat room
bool Room::eraseUser(string user_name)
{
	for (vector <User>::iterator it1 = users.begin(); it1 != users.end(); it1++)
	{
		if(user_name.compare(it1->getName())==0)
		{
			multiThreadLocker->lock();
			users.erase(it1);
			multiThreadLocker->unlock();
			return true;
		}
	}
	return false;
}


// get owner
string Room::getOwner()
{
	return this->owner;
}

// distructor
Room::~Room()
{
}

